name: Build & (Tag) Release Apps

on:
  push:
    branches:
      - main      # runs on every push to main
    tags:
      - 'v*.*.*'  # and on tag pushes like v1.2.3

permissions:
  contents: write      # needed to create/edit releases
  packages: write      # needed to upload release assets

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build macOS App
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build -- --mac --publish never

      - name: Upload macOS DMG artifact content
        uses: actions/upload-artifact@v4
        with:
          name: GeminiDesk-mac-dmg-content
          path: dist/*.dmg

      - name: Upload macOS ZIP artifact content
        uses: actions/upload-artifact@v4
        with:
          name: GeminiDesk-mac-zip-content
          path: dist/*.zip

  build-win:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build Windows App
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build -- --win --publish never

      - name: Upload Windows EXE artifact content
        uses: actions/upload-artifact@v4
        with:
          name: GeminiDesk-win-exe-content
          path: dist/*.exe

  release:
    needs: [build-mac, build-win]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files for debugging
        run: ls -R artifacts

      - name: Create GitHub Release (draft)
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ALL content from macOS DMG artifact
        run: |
          # The glob '*' tells it to take everything inside the directory
          gh release upload ${{ github.ref_name }} artifacts/GeminiDesk-mac-dmg-content/* --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ALL content from macOS ZIP artifact
        run: |
          gh release upload ${{ github.ref_name }} artifacts/GeminiDesk-mac-zip-content/* --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ALL content from Windows EXE artifact
        run: |
          gh release upload ${{ github.ref_name }} artifacts/GeminiDesk-win-exe-content/* --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
